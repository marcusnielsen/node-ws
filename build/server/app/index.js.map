{"version":3,"sources":["../../../server/app/index.js"],"names":[],"mappings":";;;;;;;;uBAAoB,SAAS;;;;oBACZ,MAAM;;;;wBACJ,WAAW;;;;sBACX,QAAQ;;;;kBACZ,IAAI;;;;AAEnB,SAAS;;AAET,IAAM,GAAG,GAAG,2BAAS,CAAC;AACtB,IAAM,MAAM,GAAG,kBAAK,YAAY,CAAC,GAAG,CAAC,CAAC;AACtC,IAAM,EAAE,GAAG,2BAAO,MAAM,CAAC,CAAC;;AAE1B,GAAG,CAAC,GAAG,CAAC,yBAAO,KAAK,CAAC,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,8BAAc,CAAC,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC;;AAEhE,IAAM,MAAM,GAAG,gBAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CACxC,YAAY,EAAE,CACd,GAAG,CAAC,UAAC,KAAK,EAAK;AACd,SAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;CAC9B,CAAC,CAAC;;AAEL,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,MAAM,EAAK;AAC9B,SAAO,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,GAAG,MAAM,CAAC,CAAC;;AAEpD,QAAM,CAAC,SAAS,CAAC,UAAC,GAAG,EAAK;AACxB,UAAM,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;GAC7B,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,SAAS,IAAI,CAAC,IAAI,EAAE;AAClB,QAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAChC,SAAO,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;;AAE7E,MAAI,IAAI,EAAE;AACR,QAAI,CAAC,MAAM,CAAC,CAAC;GACd;CACF;;qBAEc;AACb,MAAI,EAAE,IAAI;CACX","file":"index.js","sourcesContent":["import express from 'express';\nimport http from 'http';\nimport ioInit from 'socket.io';\nimport morgan from 'morgan';\nimport Rx from 'rx';\n\ndebugger;\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = ioInit(server);\n\napp.use(morgan('dev'));\napp.use('/client', express.static(__dirname + '/../../client'));\n\nconst event$ = Rx.Observable.interval(1000)\n  .timeInterval()\n  .map((value) => {\n    return JSON.stringify(value);\n  });\n\nio.on('connection', (socket) => {\n  process.stdout.write('a user connected: ' + socket);\n\n  event$.subscribe((val) => {\n    socket.emit('message', val);\n  });\n});\n\nfunction init(done) {\n  server.listen(process.env.PORT);\n  process.stdout.write('Server listening on port: ' + process.env.PORT + '\\n');\n\n  if (done) {\n    done(server);\n  }\n}\n\nexport default {\n  init: init,\n};\n"]}